# This is the service's name
service_name: "doublethink"
service_port: 9318

# Type can be normal or king_of_the_hill
type: king_of_the_hill

# All paths relative from `service` directory
public_files:
  - /

# Patch policy
patch_policy:
  # Analysis strategy (currently only `tracing`)
  strategy: tracing
  # Maximum number of changed bytes across all files
  max_bytes: 5
  # Path whitelist, relative to `service` directory
  whitelist:
    - /src/service.c

# All paths relative to the `services` docker container
flag_location:
  - /flag

# Score file, only used for king_of_the_hill services
score_location:
  - /score

authors:
  - zardus
description: "How many conflicting ideas can you hold in one thought?"

# Directories for the next two are relative to the `interactions` docker container

# Exploit scripts must output the flag using "FLAG: <FLAG>" and exit with 0 if the flag was captured correctly. 
exploit_scripts:
  - /exploit.py

# SLA scripts are run every tick against the service.
# This means that SLA traffic will be included in the PCAP dumps to teams
# Exit with 0 if the service is correct, anything else if it is not.
# If you want to surface an error message on patch submission, output "ERROR: <ERROR MESSAGE>"
sla_scripts:
  - /check.py

# Test scripts are optional.
# If you have test scripts, they will be used on patch validation, so they can do hard-core service assessment.
# Will not be run on real services in production.
# If you want to surface an error message on patch submission, output "ERROR: <ERROR MESSAGE>"
# If you do not include test_scripts, the sla_scripts will be used to validate patches
test_scripts:
  - /check.py


  

# Service executables and invocation environments
executables:
  # Path is relative to the `service`
  - path: /scripts/service
    # Invocation assumes that CWD is `service`
    arguments: ["/scripts/service", "/score"]
    environment:
